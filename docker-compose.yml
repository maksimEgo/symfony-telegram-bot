version: '3.8'

services:
  app:
    build: .
    ports:
      - "8080:8080"
    volumes:
      - .:/app
    environment:
      DATABASE_URL: "postgresql://symfony:symfony@db:5432/symfony"
      PHP_IDE_CONFIG: serverName=Telegram-Bot
      XDEBUG_CONFIG: remote_host=host.docker.internal max_nesting_level=250 remote_enable=1 remote_connect_back=0 var_display_max_depth=5 idekey='PHPSTORM'
    depends_on:
      - db

  db:
    image: postgres:16
    environment:
      POSTGRES_USER: symfony
      POSTGRES_PASSWORD: symfony
      POSTGRES_DB: symfony
    volumes:
      - pgdata:/var/lib/postgresql/data

  ngrok:
    image: wernight/ngrok
    container_name: telegram-ngrok
    env_file:
      - .env
    restart: unless-stopped
    command: ngrok start --config ngrok.yaml --all --authtoken=${NGROK_TOKEN}
    ports:
      - "4040:4040"
    volumes:
      - ./ngrok.yaml:/ngrok.yaml

###> doctrine/doctrine-bundle ###
  database:
    image: postgres:${POSTGRES_VERSION:-16}-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-app}
      # You should definitely change the password in production
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-!ChangeMe!}
      POSTGRES_USER: ${POSTGRES_USER:-app}
    healthcheck:
      test: ["CMD", "pg_isready", "-d", "${POSTGRES_DB:-app}", "-U", "${POSTGRES_USER:-app}"]
      timeout: 5s
      retries: 5
      start_period: 60s
    volumes:
      - database_data:/var/lib/postgresql/data:rw
      # You may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
      # - ./docker/db/data:/var/lib/postgresql/data:rw
###< doctrine/doctrine-bundle ###

volumes:
  pgdata:

###> doctrine/doctrine-bundle ###
  database_data:
###< doctrine/doctrine-bundle ###
